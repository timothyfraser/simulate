% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate.R
\name{simulate}
\alias{simulate}
\title{simulate() Function}
\usage{
simulate(data, seed = NULL, reps = 1000)
}
\arguments{
\item{data}{Data.frame of calculations outputted from the calculate() function. Required.}

\item{seed}{(Optional) Seed for perfect replication of simulations. Defaults to seed specified in equate() unless otherwise specified.}

\item{reps}{(Optional) Number of random draws to use for computing expected values. 1 ev = mean of N reps. Defaults to 1000.}
}
\description{
This function accounts for fundamental uncertainty in model predictions, given a vector of 1 to N predicted values calculated by the calculate() function.
While the equate() and calculate() functions account for estimation uncertainty, by varying model coefficients, the simulate() function accounts for fundamental uncertainty by taking random draws from the appropriate distribution corresponding to the model used for predictions.
simulate() returns both predicted values (where each row represents 1 random draw) and expected values (where each row represents the mean of 1000 random draws)
}
\examples{

# Load Packages
library(simulate)
library(tidyverse)

# Make a regression model
mymodel <- mtcars \%>\% lm(formula = mpg ~ disp + factor(cyl))

# Generate a multivariate normal distribution for a set of model coefficients.
mymodel \%>\%
  equate() \%>\%
  calculate(setx = list(disp = c(100, 200, 300))) \%>\%
  simulate()

}
\keyword{fundamental}
\keyword{simulate}
\keyword{uncertainty}
