% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/formulate.R
\name{formulate}
\alias{formulate}
\title{formulate() Function}
\usage{
formulate(model, new = "", data = NULL, outcome = NULL)
}
\arguments{
\item{model}{(Required) Model object.}

\item{new}{(Optional) Character value containing any terms to be added/subtracted from model equation. Defaults to "", meaning no changes.}

\item{data}{(Optional) If specified, source the data for forming the new model matrix from this data.frame, not the model object. Useful if you want to add a term not currently in your model.}

\item{outcome}{(Optional) Name of outcome variable. If not written, gathered from model formula}
}
\description{
This function quickly updates your model object by adding or subtracting predictor terms, outputting a data.frame ready to be passed to your modeling function of choice.
}
\examples{

# Load Packages
library(simulate)
library(tidyverse)

# Make a regression model
mymodel <- mtcars \%>\% lm(formula = mpg ~ disp + factor(cyl))

# Update regression model using formulate

# Add an interaction between two variables already in the model
mymodel \%>\%
 formulate(" + disp*factor(cyl)")

# Now run the model by piping in the model function afterwards
mymodel \%>\%
 formulate(" + disp*factor(cyl)") \%>\%
 lm()

# Or, add in a variable that wasn't in the original model, like wt
# by adding the raw dataframe in under the 'data' parameter 
mymodel \%>\%
  formulate(" + disp*wt", mtcars, outcome = "drat")

# Or, change the outcome variable TOO, adding a variable that wasn't in the original model, like drat
mymodel \%>\%
  formulate(" + disp*wt", mtcars, outcome = "drat")

# Happy modeling!

}
\keyword{formula}
